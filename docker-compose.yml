version: '3.8'

services:
  mysql:
    container_name: "server-mysql"
    volumes:
      - mysql_data:/var/lib/mysql
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "test_db"
    ports:
      - "3306:3306"
  server:
    # container_name: "server-app"
    image: "server-app"
    build: .
    command: bash -c 'while !</dev/tcp/mysql/3306; do echo "waiting for mysql to be ready...."; sleep 5; done; npm run start'
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    depends_on:
      - mysql
  redis:
    image: redis
    container_name: redis
    command: sh -c "redis-server --appendonly yes && redis-cli flushall"
    volumes:
      - redis_data:/data
    restart: always

  load-balancer:
    image: haproxy
    ports:
      - "4000:4000"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - server1
      - server2

  server1:
    build: .
    container_name: server1
    command: sh -c "node ./tcp/server.js"
    environment:
      APP_ID: 1000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TCP_HOST: '0.0.0.0'
      TCP_PORT: 4000
      SERVER_HOST: 'server'
    depends_on:
      - redis
      - server

  server2:
    build: .
    container_name: server2
    command: sh -c "node ./tcp/server.js"
    environment:
      APP_ID: 1001
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TCP_HOST: '0.0.0.0'
      TCP_PORT: 4000
      SERVER_HOST: 'server'
    depends_on:
      - redis
      - server

volumes:
  redis_data:
  mysql_data:
